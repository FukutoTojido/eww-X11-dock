(include	"./modules/calendar.yuck")

(defvar 	onHoverName 		"")
(defvar		calendarIsOpen		false)
(deflisten 	allWin 
	:initial 	`[]`
	`./scripts/windowList`)
(deflisten 	activeWindow	
	:initial 	`0x0000000`
	`./scripts/activeWindow`)
(defpoll 	wifiName
	:interval 	"1s"
	`iwgetid -r`
)
(defpoll	volume
	:interval	"100ms"
	:initial	0
	`awk -F"[][]" '/Left:/ { print $2 }' <(amixer sget Master) | grep -Po --line-buffered '[0-9]*'`)
(defpoll	muted
	:interval	"100ms"
	:initial	"no"
	`pactl get-sink-mute @DEFAULT_SINK@ | grep -Po "(?<=(^Mute: )).*"`)
(defpoll	wallpaperPath
	:interval	"5s"
	:initial	""
	`cat $HOME/.config/spacefm/session | grep -Po "(?<=(^wallpaper=)).*"`)

(defwidget bar []
	(centerbox 	
		:orientation 	"h"
		:vexpand		false
		:valign			"start"
		:class			"bar"
		:style			`
			background-image:	url("${wallpaperPath}")
		`
		(left)
		(middle)
	  	(right)))

(defwidget left []
	(box
		:class			"left"
		:orientation	"h"
		:halign			"start"
		:space-evenly	false
		(power)
		(menu)
		(taskbar)
		(hoverName)
		))

(defwidget	power	[]
	(eventbox
		:onhover		`eww update onHoverName="Power Menu"`
		:onhoverlost	`eww update onHoverName=""`
		(button
			:class			"menuButton"
			:onclick		`$HOME/.config/rofi/powermenu/type-2/powermenu.sh`
			(box
				:width		25
				:height		25
				:style		`
					color: #f26d7f;
				`
				"")
			)))
	
(defwidget menu []
	(eventbox
		:onhover		`eww update onHoverName="Launcher"`
		:onhoverlost	`eww update onHoverName=""`
		(button
			:class			"menuButton"
			:onclick		`$HOME/.config/rofi/launchers/type-1/launcher.sh`
			(image
				:path				"/home/try-z/.config/eww/icons/osu.png"
				:image-width		25
				:image-height		25))))

(defwidget hoverName []
	(revealer
		:transition			"slideright"
		:reveal				{onHoverName != ""}
		:duration			"200ms"
		:style 				`
			padding: ${onHoverName != "" ? "10px" : "0px"};
		`
		(label
			:text			{onHoverName}
			:limit-width	100)))

(defwidget taskbar []
	(box
		:class			"taskbar"
		:halign			"start"
		:space-evenly	false
		:spacing		5
		(for win in allWin
			(eventbox
				:onhover 		`eww update onHoverName="${win.name}"`
				:onhoverlost	`eww update onHoverName=""`
				(button
					:onclick `
						./scripts/toggleWindow.sh ${win.npid}
					`
					:class	{win.pid == activeWindow ? "win active" : "win"}
					:valign	"center"
					:halign	"center"
					:style `
						${win.pid == activeWindow ? "background-color: rgba(76, 86, 106, 0.365);" : ""}
					`
					(box
						:space-evenly	false
						:spacing		0
						(image
							:path				"${win.icon}"
							:image-width		25
							:image-height		25)))))))

(defwidget middle []
		(box
			:visible	false
			activeWindow))

(defwidget right []
	(box
		:class			"right"
		:orientation	"h"
		:space-evenly	false
		:halign			"end"
		:valign			"center"
		:spacing		10
		(sysinfo)
		(timedate)))

(defwidget sysinfo []
	(box
		:class			"sysinfo"
		:spacing		5
		:space-evenly	false
		(audio)
		(wifi)
		(cpuram)
		(battery))
	)

(defwidget battery []
	(circular-progress
		:class 		{EWW_BATTERY["BAT0"].capacity >= 80 ? 
						"bat-great" 
						: EWW_BATTERY["BAT0"].capacity >= 50 
							? "bat-good" 
							: EWW_BATTERY["BAT0"].capacity >= 30 
								? "bat-mid" 
								: "bat-low" }
		:width 		30
		:height 	30
		:thickness	3
		:value 		{EWW_BATTERY["BAT0"].capacity}
		:start-at	75
		:clockwise	true
		:style		`
			font-size: 10px;
		`
		:valign		"center"
		(box
			:style `
				color: white;
			`
			{EWW_BATTERY["BAT0"].capacity}
		)))

(defwidget cpuram []
	(box
		:orientation	"v"
		:spacing		4
		:space-evenly 	false 
		:valign			"center"
		:width			100
		:style			`
			padding: 0 15px;
		`
		(ram)
		(cpu)))

(defwidget cpu []
	(box
		:space-evenly	false
		:spacing		10
		:style			`font-size: 12px; color: #f595a5;`
		(label
			:class	"nerdFont"
			:valign "center"
			:text	``)
		`${round(EWW_CPU.avg, 0)}%`))

(defwidget ram []
	(box
		:space-evenly	false
		:spacing		10
		:style			`font-size: 12px; color: #a1d6ed;`
		(label
			:class	"nerdFont"
			:valign "center"
			:text	``)
		`${round(EWW_RAM.used_mem / 1024 / 1024, 0)} MiB`))

(defwidget wifi []
	(button
		:class			`wifi`
		:onclick		`networkmanager_dmenu`
		(box
			:space-evenly 	false
			:spacing		20
			:style		`
				color: #a9e8c8;
			`
			(label
				:text		``)
			`${wifiName}`)))

(defwidget audio []
	(button
		:class			`wifi`
		:onclick		{muted == "no" ? `amixer set Master mute` : `amixer set Master unmute` }
		(box
			:space-evenly 	false
			:spacing		20
			:style		`
				color: #ebcb8b;
			`
			(label
				:text		{volume <= 0 || muted == "yes" ? '' : ''})
			{muted == "yes" ? "Muted" : `${volume}%`})))
  
(defwidget timedate []
	(button
		:class 			"timedate"
		:onclick		`./scripts/toggleCalendar.sh`
		(box 
			:orientation 	"v" 
			:space-evenly 	false 
			:halign 		"end"
			:valign			"center"
			(time)
			(date)))
)

(defwidget time []
	(box
		:class		"time"
		:halign		"end"
		:space-evenly 	false 
		time))

(defwidget date []
	(box
		:class		"date"
		:halign		"end"
		:space-evenly 	false 
		date))
  
(defpoll time 	
	:interval "1s"
	"date '+%H:%M:%S'")

(defpoll date
	:interval "1s"
	"date '+%a, %_d %B %Y'")
  
(defwindow bar
	:monitor 0
	:windowtype "dock"
	:geometry (geometry :x "0px"
						:y "0px"
						:width "93%"
						; :height "70px"
						:anchor "top left")
	:reserve (struts :side "top" :distance "80px")
	(bar))